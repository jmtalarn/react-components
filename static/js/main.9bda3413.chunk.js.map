{"version":3,"sources":["logo.svg","Home.js","stepform_component/StepForm.js","navigation/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","countryOptions","countryList","map","c","value","code","label","concat","name","dial_code","StepForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setErrorMessage","msg","setState","err_msg","state","tac","shown","sent","fields","reduce","acc","curr","objectSpread","defineProperty","key","errors","isRequired","required","types","type","done","showCross","length","Infinity","sendImmediate","immediate","toLowerCase","country","custom","dob","date","month","year","handleChange","bind","assertThisInitialized","handleClick","handleKeyPress","validateForm","checkValid","checkFilled","changeTac","_this2","Array","isArray","forEach","field","split","newDob","selectedCountry","filter","x","toUpperCase","today","Date","dd","getDate","mm","getMonth","getFullYear","dateString","test","parts","day","parseInt","curDate","curYear","curMonth","curDay","monthLength","email","String","Name","_this3","keys","validateEmail","validateDate","isValidPhoneNumber","includes","validateName","valid","i","querySelector","ReactDOM","findDOMNode","filled","e","_this4","isNaN","placeholder","_","findComponenetControl","focus","trim","toProperCase","_this5","sendTextMessage","scrollBottom","_this6","style","position","top","left","backgroundColor","primaryColor","height","width","transition","paddingBottom","fontSize","step","slice","react","autoFocus","onChange","onKeyPress","marginTop","color","autoComplete","display","paddingTop","react_phone_number_input","onKeyDown","keyCode","console","log","SelectField_default","multiple","hintText","fontFamily","boxShadow","menuStyle","zIndex","transform","maxHeight","val","options","MenuItem_default","primaryText","checked","indexOf","cursor","onClick","tnc","id","htmlFor","openWebview","Component","navigation","listStyle","flexDirection","marginRight","react_router_dom","to","stepformContent","attachment","payload","Boolean","window","location","hostname","match","prototype","opt_lowerCaseTheRest","replace","s","render","react_router","path","exact","component","src_stepform_component_StepForm","scrollTo","document","body","scrollHeight","message","alert","JSON","stringify","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bda3413.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <header className=\"Home-header\">\n        <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/Home.js</code> and save to reload.\n        </p>\n        <a\n          className=\"Home-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./StepForm.css\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport Select, { components } from \"react-select\";\nimport countryList from \"../data/countryCodes.json\";\n\nimport PhoneInput, { isValidPhoneNumber } from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\n\nconst countryOptions = countryList.map(c => {\n  return {\n    value: c.code,\n    label: `${c.name} (${c.dial_code})`,\n    code: c.dial_code,\n  };\n});\nconst SingleValue = ({ children, ...props }) => (\n  <components.SingleValue className=\"label\" {...props}>\n    {`+${\n      children.split(\"+\").length > 1\n        ? children.split(\"+\")[1].replace(\")\", \" \")\n        : \"\"\n    }`}\n  </components.SingleValue>\n);\nclass StepForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tac: false,\n      shown: 1,\n      sent: false,\n      fields: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: !!curr.value ? curr.value : \"\" }),\n        {},\n      ),\n      errors: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: false }),\n        {},\n      ),\n      isRequired: props.fields.reduce(\n        (acc, curr) => ({\n          ...acc,\n          [curr.key]: curr.required === \"false\" ? false : true,\n        }),\n        {},\n      ),\n      types: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: curr.type }),\n        {},\n      ),\n      done: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: false }),\n        {},\n      ),\n      showCross: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: false }),\n        {},\n      ),\n      length: props.fields.reduce(\n        (acc, curr) => ({ ...acc, [curr.key]: curr.length || Infinity }),\n        {},\n      ),\n      sendImmediate: props.fields.reduce(\n        (acc, curr) => ({\n          ...acc,\n          [curr.key]:\n            !!curr.immediate && curr.immediate.toLowerCase() === \"true\"\n              ? true\n              : false,\n        }),\n        {},\n      ),\n      country: null,\n      custom: {\n        dob: {\n          date: \"\",\n          month: \"\",\n          year: \"\",\n        },\n      },\n    };\n    // event Binding\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.checkValid = this.checkValid.bind(this);\n    this.checkFilled = this.checkFilled.bind(this);\n    this.changeTac = this.changeTac.bind(this);\n  }\n\n  changeTac() {\n    this.setState({\n      tac: !this.state.tac,\n    });\n  }\n\n  componentDidMount() {\n    if (Array.isArray(this.props.fields)) {\n      this.props.fields.forEach(field => {\n        if (field.key === \"dob\" && field.value) {\n          let date = field.value.split(\"/\");\n          if (date.length) {\n            let newDob = { date: date[0], month: date[1], year: date[2] };\n            this.setState({ custom: { ...this.state.custom, dob: newDob } });\n          }\n        } else if (field.type === \"contact_num\") {\n          if (field.country) {\n            let selectedCountry = countryOptions.filter(\n              x => x.value === field.country.toUpperCase(),\n            );\n            this.setState({\n              country:\n                selectedCountry.length > 0\n                  ? selectedCountry[0]\n                  : countryOptions[0],\n            });\n          }\n        }\n      }, this);\n    }\n  }\n\n  getDate() {\n    const today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n    if (dd < 10) dd = \"0\" + dd;\n    if (mm < 10) mm = \"0\" + mm;\n    return dd + \"/\" + mm + \"/\" + yyyy;\n  }\n\n  validateDate(dateString) {\n    if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false;\n    const parts = dateString.split(\"/\");\n    const day = parseInt(parts[0], 10);\n    const month = parseInt(parts[1], 10);\n    const year = parseInt(parts[2], 10);\n    const curDate = new Date();\n    const curYear = parseInt(curDate.getFullYear(), 10);\n    const curMonth = parseInt(curDate.getMonth() + 1, 10);\n    const curDay = parseInt(curDate.getDate(), 10);\n    if (\n      year < 1000 ||\n      year > curYear ||\n      (year === curYear && month > curMonth) ||\n      (year === curYear && month === curMonth && day > curDay) ||\n      month === 0 ||\n      month > 12\n    )\n      return false;\n    let monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0))\n      monthLength[1] = 29;\n    return day > 0 && day <= monthLength[month - 1];\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validateName(Name) {\n    return /^[a-z ,.'-]+(\\s)[a-z ,.'-]+$/i.test(Name);\n  }\n\n  validateForm() {\n    let errors = { ...this.state.errors };\n    let showCross = { ...this.state.showCross };\n    Object.keys(this.state.fields).forEach(key => {\n      if (this.state.fields[key] !== \"\") {\n        switch (this.state.types[key]) {\n          case \"email\":\n            if (!this.validateEmail(this.state.fields[key]))\n              errors = { ...errors, [key]: true };\n            else {\n              showCross = { ...showCross, [key]: false };\n              errors = { ...errors, [key]: false };\n            }\n            break;\n          case \"dob\":\n            if (!this.validateDate(this.state.fields[key]))\n              errors = { ...errors, [key]: true };\n            else {\n              showCross = { ...showCross, [key]: false };\n              errors = { ...errors, [key]: false };\n            }\n            break;\n          case \"contact_num\":\n            if (\n              this.state.fields[key] &&\n              isValidPhoneNumber(this.state.fields[key])\n                ? true\n                : false\n            ) {\n              showCross = { ...showCross, [key]: false };\n              errors = { ...errors, [key]: false };\n            } else {\n              errors = { ...errors, [key]: true };\n              this.setState({ done: { ...this.state.done, [key]: false } });\n            }\n            break;\n          case \"password\":\n          case \"text\":\n            if ([\"patient_name\", \"patientName\"].includes(key)) {\n              if (this.validateName(this.state.fields[key])) {\n                showCross = { ...showCross, [key]: false };\n                errors = { ...errors, [key]: false };\n              } else {\n                errors = { ...errors, [key]: true };\n              }\n            } else if (this.state.fields[key] !== \"\")\n              showCross = { ...showCross, [key]: false };\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    this.setState({ errors, showCross });\n  }\n\n  checkValid() {\n    let valid = true;\n    const keys = Object.keys(this.state.errors);\n    for (let i = 0; i < keys.length; i++)\n      if (this.state.errors[keys[i]]) valid = false;\n\n    return valid;\n  }\n\n  findComponenetControl(querySelector) {\n    let domNode = ReactDOM.findDOMNode(this);\n    return domNode.querySelector(querySelector);\n  }\n\n  checkFilled() {\n    let filled = true;\n    const keys = Object.keys(this.state.errors);\n    for (let i = 0; i < this.state.shown; i++)\n      if (this.state.fields[keys[i]] === \"\") filled = false;\n    return filled;\n  }\n\n  handleChange(e) {\n    if (!this.state.sent) {\n      if (\n        ![\"dob\", \"contact_num\"].includes(this.state.types[e.target.name]) ||\n        !isNaN(e.target.value)\n      ) {\n        if (this.state.types[e.target.name] === \"dob\") {\n          if (e.target.placeholder === \"DD\") {\n            this.setState(\n              {\n                custom: {\n                  ...this.state.custom,\n                  dob: { ...this.state.custom.dob, date: e.target.value },\n                },\n                fields: {\n                  ...this.state.fields,\n                  [e.target.name]:\n                    e.target.value +\n                    \"/\" +\n                    this.state.custom.dob.month +\n                    \"/\" +\n                    this.state.custom.dob.year,\n                },\n              },\n              _ => this.validateForm(),\n            );\n\n            if (e.target.value.length > 1) {\n              this.findComponenetControl(\"input[placeholder=MM]\").focus();\n            }\n          }\n          if (e.target.placeholder === \"MM\") {\n            this.setState(\n              {\n                custom: {\n                  ...this.state.custom,\n                  dob: { ...this.state.custom.dob, month: e.target.value },\n                },\n                fields: {\n                  ...this.state.fields,\n                  [e.target.name]:\n                    this.state.custom.dob.date +\n                    \"/\" +\n                    e.target.value +\n                    \"/\" +\n                    this.state.custom.dob.year,\n                },\n              },\n              _ => this.validateForm(),\n            );\n\n            if (e.target.value.length > 1) {\n              this.findComponenetControl(\"input[placeholder=YYYY]\").focus();\n            }\n          }\n          if (e.target.placeholder === \"YYYY\")\n            this.setState(\n              {\n                custom: {\n                  ...this.state.custom,\n                  dob: { ...this.state.custom.dob, year: e.target.value },\n                },\n                fields: {\n                  ...this.state.fields,\n                  [e.target.name]:\n                    this.state.custom.dob.date +\n                    \"/\" +\n                    this.state.custom.dob.month +\n                    \"/\" +\n                    e.target.value,\n                },\n              },\n              () => {\n                this.validateForm();\n              },\n            );\n        } else if (e.target.value.length <= this.state.length[e.target.name])\n          this.setState(\n            {\n              fields: {\n                ...this.state.fields,\n                [e.target.name]:\n                  !!e.target.value &&\n                  [\n                    \"patient_email\",\n                    \"mobile_no\",\n                    \"mobileNo\",\n                    \"emailId\",\n                  ].includes(e.target.name) &&\n                  typeof e.target.value === \"string\"\n                    ? e.target.value.trim()\n                    : [\"patient_name\", \"patientName\"].includes(e.target.name) &&\n                      typeof e.target.value === \"string\"\n                    ? e.target.value.toProperCase()\n                    : e.target.value,\n              },\n            },\n            () => this.validateForm(),\n          );\n        this.setState({ done: { ...this.state.done, [e.target.name]: false } });\n      }\n    }\n  }\n\n  handleClick(key) {\n    if (!this.state.sent) {\n      if (!this.state.errors[key] && this.state.fields[key] !== \"\")\n        this.setState({\n          done: { ...this.state.done, [key]: true },\n          showCross: { ...this.state.showCross, [key]: false },\n        });\n      else\n        this.setState({ showCross: { ...this.state.showCross, [key]: true } });\n      if (\n        this.checkValid() &&\n        ((!this.checkFilled() && !this.state.isRequired[key]) ||\n          this.checkFilled())\n      ) {\n        if (this.state.sendImmediate[key]) {\n          this.props.sendTextMessage({ [key]: this.state.fields[key] });\n          this.setState({ shown: this.state.shown + 1 });\n        } else {\n          if (this.state.shown < Object.keys(this.state.fields).length)\n            this.setState({ shown: this.state.shown + 1 }, () => {\n              this.props.scrollBottom();\n            });\n          else {\n            this.props.sendTextMessage({\n              ...this.state.fields,\n              country: this.state.country,\n            });\n            this.setState({ sent: true });\n          }\n        }\n      }\n    }\n  }\n\n  handleKeyPress(e) {\n    if (\n      e.key === \"Enter\" &&\n      this.state.types[e.target.name] !== \"longtext\" &&\n      this.state.fields[e.target.name] &&\n      !this.state.sent\n    ) {\n      this.handleClick(e.target.name);\n    }\n  }\n\n  setErrorMessage = msg => {\n    this.setState({\n      err_msg: msg,\n    });\n  };\n\n  render() {\n    const fields = this.props.fields;\n    return (\n      <div className=\"pk-step-form-container\">\n        <div\n          className={`pk-step-form-card ${this.state.sent &&\n            \"pk-step-form-sent\"}`}\n          style={{ position: \"relative\" }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              backgroundColor: this.state.sent\n                ? \"#4EC794\"\n                : this.props.primaryColor,\n              height: 5,\n              width: this.state.sent\n                ? \"100%\"\n                : `calc(100% / ${fields.length} * ${this.state.shown - 1})`,\n              transition: \"width 0.2s ease-in-out\",\n            }}\n          />\n          <div\n            style={{\n              paddingBottom: \"10px\",\n              fontSize: \"14px\",\n            }}\n          >\n            ( {this.state.shown} / {fields.length} )\n          </div>\n          {(this.props.step ? fields.slice(0, this.state.shown) : fields).map(\n            field => (\n              <Fragment>\n                {[\"dob\"].includes(field.type) && (\n                  <div className=\"pk-step-form-field-title\">\n                    {field.placeholder}\n                  </div>\n                )}\n                <div className=\"pk-step-form-field\">\n                  {field.type === \"email\" ? (\n                    <input\n                      autoFocus={true}\n                      className={`pk-step-form-input ${this.state.showCross[\n                        field.key\n                      ] && \"pk-step-form-error\"}`}\n                      name={field.key}\n                      value={this.state.fields[field.key]}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      type=\"text\"\n                      placeholder={field.placeholder}\n                    />\n                  ) : field.type === \"text\" ? (\n                    <div style={{ width: \"100%\" }}>\n                      <input\n                        autoFocus={true}\n                        style={{ width: \"100%\" }}\n                        className={`pk-step-form-input ${this.state.showCross[\n                          field.key\n                        ] && \"pk-step-form-error\"}`}\n                        name={field.key}\n                        value={this.state.fields[field.key]}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                        placeholder={field.placeholder}\n                      />\n                      {[\"patient_name\", \"patientName\"].includes(field.key) &&\n                        this.state.showCross[field.key] && (\n                          <div style={{ marginTop: \"-7px\" }}>\n                            <small style={{ color: \"red\" }}>\n                              Enter full name\n                            </small>\n                          </div>\n                        )}\n                    </div>\n                  ) : field.type === \"dob\" ? (\n                    <div className=\"pk-step-form-date-container\">\n                      <input\n                        autoComplete={false}\n                        autoFocus={true}\n                        className={`pk-step-form-input pk-step-form-date ${this\n                          .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                        name={field.key}\n                        value={this.state.custom.dob.date}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                        placeholder={\"DD\"}\n                      />{\" \"}\n                      <span className=\"pk-step-form-date-seperator\">/</span>\n                      <input\n                        autoComplete={false}\n                        className={`pk-step-form-input pk-step-form-date ${this\n                          .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                        name={field.key}\n                        value={this.state.custom.dob.month}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                        placeholder={\"MM\"}\n                      />{\" \"}\n                      <span className=\"pk-step-form-date-seperator\">/</span>\n                      <input\n                        autoComplete={false}\n                        className={`pk-step-form-input pk-step-form-date ${this\n                          .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                        name={field.key}\n                        value={this.state.custom.dob.year}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                        placeholder={\"YYYY\"}\n                      />{\" \"}\n                      <span className=\"pk-step-form-date-seperator\" />\n                    </div>\n                  ) : field.type === \"contact_num\" ? (\n                    <div\n                      style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        paddingTop: \"5px\",\n                      }}\n                      className=\"pk-step-form-input\"\n                    >\n                      {/* <div\n                       className={`pk-step-form-input pk-step-form-select ${this\n                        .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                        style={{width: \"75px\"}}\n                    >\n                    <SelectField\n                      multiple={\n                        !!field.multiple &&\n                          field.multiple.toLowerCase() === \"true\"\n                          ? true\n                          : false\n                      }\n                      value={this.state.country}\n                      style={{\n                        fontFamily: \"'Muli', sans-serif\",\n                        height: 37,\n                        boxShadow: \"0 0 1px 1px rgba(0, 0, 0, 0,3)\"\n                      }}\n                      menuStyle={{\n                        zIndex: 20004444444444444444444444,\n                        transform: \"translateY(-14px)\"\n                      }}\n                      maxHeight={250}\n                      isDisabled={\n                        !!field.disable_country &&\n                        field.disable_country.toString().toLowerCase() === \"true\"\n                      }\n                      onChange={(e,i,val) => {\n                        this.setState({ country: val });\n                      }}\n                    >\n                       {countryOptions.map((val, i) => (\n                        <MenuItem\n                          key={i}\n                          value={val}\n                          primaryText={val.code}\n                          style={{ fontFamily: \"'Muli', sans-serif\" }}\n                        >\n                          {val.label.split(\" \")[0] + \"-\"}\n                        </MenuItem>\n                      ))}\n                    </SelectField>\n                    </div> */}\n\n                      {/* <div>\n                    <Select\n                      styles={{\n                        singleValue: base => ({\n                          ...base,\n                          fontFamily: '\"Muli\", sans-serif',\n                          fontSize: \"14px\"\n                        })\n                      }}\n                      dropDownMenuProps={{\n                        position: \"absolute\",\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                      }}\n                      menuContainerStyle={{ \n                        zIndex: 999999\n                      }}\n                      maxHeight={50}\n                      placeholder=\"\"\n                      value={this.state.country}\n                      isDisabled={\n                        !!field.disable_country &&\n                        field.disable_country.toString().toLowerCase() === \"true\"\n                      }\n                      onChange={e => {\n                        this.setState({ country: e })}}\n                      options={countryOptions}\n                      components={{ SingleValue }}\n                    />\n                    </div> */}\n\n                      <div className=\"pk-phone-number-input\">\n                        <PhoneInput\n                          autoFocus={field.country ? true : false}\n                          placeholder=\"Enter phone number\"\n                          value={this.state.fields[field.key]}\n                          name={field.key}\n                          country={field.country}\n                          onKeyPress={this.handleKeyPress}\n                          onChange={value => {\n                            this.setState(\n                              {\n                                ...this.state,\n                                fields: {\n                                  ...this.state.fields,\n                                  [field.key]: value,\n                                },\n                              },\n                              () => {\n                                this.validateForm();\n                              },\n                            );\n                          }}\n                          onKeyDown={e => {\n                            if (e.keyCode == 13) {\n                              console.log(\"enter\");\n\n                              this.handleClick(e.target.name);\n                            }\n                          }}\n                        />\n                      </div>\n\n                      {/* <div\n                    style={{\n                      width: '100%'\n                    }}\n                    >\n                    <input\n                      style={{\n                        width: '100%'\n                      }}\n                      autoFocus={true}\n                      className={`pk-step-form-input ${\n                        this.state.showCross[field.key]\n                        && \"pk-step-form-error\"}`}\n                      name={field.key}\n                      value={this.state.fields[field.key]}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      type=\"text\"\n                      maxLength=\"10\"\n                      placeholder={field.placeholder}\n                    />\n                    </div> */}\n                      <style>\n                        {`.css-1rtrksz{ \n                            height: 40px; \n                          } \n                          .css-1aya2g8,\n                          .css-162g8z5,\n                          .css-2o5izw{ \n                            height: 40px; \n                            border: 1px solid #ccc !important; \n                          }\n                          .css-15k3avv{\n                            width: 200px !important;\n                          }\n                          .css-11unzgr{\n                            max-height: 200px;\n                          }`}\n                      </style>\n                    </div>\n                  ) : field.type === \"longtext\" ? (\n                    <textarea\n                      autoFocus={true}\n                      className={`pk-step-form-input pk-step-form-textarea ${this\n                        .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                      name={field.key}\n                      value={this.state.fields[field.key]}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      type=\"text\"\n                      placeholder={field.placeholder}\n                    />\n                  ) : field.type === \"dropdown\" ? (\n                    <div\n                      className={`pk-step-form-input pk-step-form-select ${this\n                        .state.showCross[field.key] && \"pk-step-form-error\"}`}\n                    >\n                      <SelectField\n                        multiple={\n                          !!field.multiple &&\n                          field.multiple.toLowerCase() === \"true\"\n                            ? true\n                            : false\n                        }\n                        hintText={field.placeholder}\n                        value={this.state.fields[field.key]}\n                        style={{\n                          fontFamily: \"'Muli', sans-serif\",\n                          height: 37,\n                          boxShadow: \"0 0 1px 1px rgba(0, 0, 0, 0,3)\",\n                        }}\n                        menuStyle={{\n                          zIndex: 20004444444444444444444444,\n                          transform: \"translateY(-14px)\",\n                        }}\n                        maxHeight={250}\n                        onChange={(e, i, val) => {\n                          this.setState(\n                            {\n                              fields: {\n                                ...this.state.fields,\n                                [field.key]: val,\n                              },\n                            },\n                            () => {\n                              this.handleClick(field.key);\n                            },\n                          );\n                        }}\n                      >\n                        {field.options.map((val, i) => (\n                          <MenuItem\n                            key={i}\n                            value={val}\n                            primaryText={val}\n                            style={{ fontFamily: \"'Muli', sans-serif\" }}\n                            checked={\n                              !!field.multiple &&\n                              field.multiple.toLowerCase() === \"true\" &&\n                              this.state.fields[field.key].indexOf(val) > -1\n                            }\n                          />\n                        ))}\n                      </SelectField>\n                    </div>\n                  ) : field.type === \"password\" ? (\n                    <input\n                      autoFocus={true}\n                      className={`pk-step-form-input ${this.state.showCross[\n                        field.key\n                      ] && \"pk-step-form-error\"}`}\n                      name={field.key}\n                      value={this.state.fields[field.key]}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      type=\"password\"\n                      placeholder={field.placeholder}\n                    />\n                  ) : (\n                    <input\n                      autoFocus={true}\n                      className={`pk-step-form-input ${this.state.showCross[\n                        field.key\n                      ] && \"pk-step-form-error\"}`}\n                      name={field.key}\n                      value={this.state.fields[field.key]}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      type={field.type}\n                      placeholder={field.placeholder}\n                    />\n                  )}\n                  {\n                    <button\n                      className={`pk-step-form-button ${field.type ===\n                        \"longtext\" && \"pk-step-form-textarea-button\"} ${\n                        this.state.showCross[field.key]\n                          ? \"pk-step-form-cross\"\n                          : this.state.done[field.key]\n                          ? \"pk-step-form-check\"\n                          : \"pk-step-form-chevron\"\n                      }`}\n                      style={{\n                        ...(this.state.showCross[field.key]\n                          ? { backgroundColor: \"#DC4340\" }\n                          : this.state.done[field.key]\n                          ? { backgroundColor: \"#4EC794\" }\n                          : {\n                              backgroundColor: this.props.primaryColor,\n                              cursor: \"pointer\",\n                            }),\n                      }}\n                      onClick={\n                        this.state.done[field.key]\n                          ? this.state.tac\n                            ? this.state.done[field.key]\n                              ? () => {}\n                              : () => {\n                                  this.handleClick(field.key);\n                                }\n                            : () => {\n                                this.setErrorMessage(\n                                  \"Please agree terms and condition\",\n                                );\n                              }\n                          : () => {\n                              this.handleClick(field.key);\n                            }\n                      }\n                    >\n                      <div className=\"pk-step-form-button-bar\" />\n                      <div className=\"pk-step-form-button-bar\" />\n                    </button>\n                  }\n                </div>\n                {field.type === \"dob\" && field.tnc && (\n                  <div style={{ display: \"flex\" }}>\n                    <input\n                      id=\"tac\"\n                      name=\"tac\"\n                      type=\"checkbox\"\n                      checked={this.state.tac}\n                      onClick={this.changeTac}\n                    />\n                    <label htmlFor=\"tac\">\n                      I Agree{\" \"}\n                      <span\n                        className=\"hyperlink\"\n                        onClick={_ => this.props.openWebview(field.tnc)}\n                      >\n                        terms and condition\n                      </span>\n                    </label>\n                  </div>\n                )}\n              </Fragment>\n            ),\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StepForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <nav>\n    <ul style={{ listStyle: \"none\", display: \"flex\", flexDirection: \"row\" }}>\n      <li style={{ marginRight: \"1rem\" }}>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/stepform\">Stepform</Link>\n      </li>\n    </ul>\n  </nav>\n);\n","import React from \"react\";\nimport Home from \"./Home\";\nimport StepForm from \"./stepform_component/StepForm\";\nimport stepformContent from \"./stepform_component/stepform2.json\";\nimport Nav from \"./navigation\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst fields = stepformContent.attachment.payload.fields;\n\nexport default props => {\n  return (\n    <Router>\n      <Nav />\n\n      <Route path=\"/\" exact component={Home} />\n      <Route\n        path=\"/stepform\"\n        exact\n        render={() => (\n          <StepForm\n            fields={fields}\n            primaryColor=\"darkblue\"\n            step={true}\n            scrollBottom={() => {\n              window.scrollTo(0, document.body.scrollHeight);\n            }}\n            sendTextMessage={message => {\n              alert(JSON.stringify(message));\n            }}\n          />\n        )}\n      />\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nString.prototype.toProperCase = function(opt_lowerCaseTheRest) {\n  return (opt_lowerCaseTheRest ? this.toLowerCase() : this).replace(\n    /(^|[\\s\\xA0])[^\\s\\xA0]/g,\n    function(s) {\n      return s.toUpperCase();\n    },\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}